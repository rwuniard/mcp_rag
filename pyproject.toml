[project]
name = "mcp-rag"
version = "0.1.0"
description = "A Retrieval Augmented Generation system using Model Context Protocol"
readme = "README.md"
requires-python = ">=3.12"
authors = [
    {name = "Your Name", email = "your.email@example.com"}
]
license = {text = "MIT"}
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.12",
]
dependencies = [
    "chromadb>=1.0.17",
    "fastmcp>=2.11.3",
    "google-generativeai>=0.8.5",
    "langchain>=0.3.27",
    "langchain-chroma>=0.2.5",
    "langchain-community>=0.3.27",
    "langchain-google-genai>=2.0.10",
    "langchain-openai>=0.3.30",
    "python-dotenv>=1.1.1",
    "pypdf>=5.1.0",
    "structlog>=25.4.0",
    "prometheus-client>=0.22.1",
]

[project.optional-dependencies]
dev = [
    "pytest>=7.0.0",
    "pytest-cov>=4.0.0",
    "black>=23.0.0",
    "isort>=5.12.0",
    "flake8>=6.0.0",
]

[project.scripts]
rag-store-cli = "rag_store.cli:main"
rag-fetch-cli = "rag_fetch.cli:main"
rag-mcp-server = "rag_fetch.mcp_server:main"

[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[tool.setuptools.packages.find]
where = ["src"]
include = ["rag_store*", "rag_fetch*"]

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"

[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88

[dependency-groups]
dev = [
    "coverage>=7.10.4",
]
